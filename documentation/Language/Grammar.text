TODO: better structure

FUNCTION: func ID ((optional)mut ID:ID , ... ) STATEMENT
STRUCT: struct ID { (optional)mut ID:ID ; ... }

ID: [a-zA-Z][a-zA-Z0-9_]*
STATEMENT: ASSIGN|CALL|RETURN|IF|WHILE|FOR|BREAK|CONTINUE|BLOCK|DECL
ASSIGN: ID = EXPR ;
CALL: ID ( EXPR , ... ) ;
RETURN: return (optional)EXPR ;
IF: if ( EXPR ) STATEMENT (optional)ELSE STATEMENT
WHILE: while ( EXPR ) STATEMENT
FOR: for ( STATEMENT,EXPR,STATEMENT ) STATEMENT
BREAK: break ;
CONTINUE: continue ;
BLOCK: { STATEMENT ; ... }
DECL:let (optional)mut ID:ID (optional) = EXPR ;

//TODO: this is not correct
EXPR: COMPARE && EXPR | COMPARE || EXPR | COMPARE
COMPARE: ADDSUB > ADDSUB | ADDSUB < ADDSUB | ADDSUB >= ADDSUB | ADDSUB <= ADDSUB | ADDSUB == ADDSUB | ADDSUB != ADDSUB | ADDSUB
ADDSUB: MULDIV + MULDIV | MULDIV - MULDIV | MULDIV
MULDIV:  POW * POW | POW / POW | POW % POW | POW
POW: UNARY ** POW | UNARY
UNARY: ! FACTOR | - FACTOR | + FACTOR | FACTOR
FACTOR: (EXPR) | VALUE | ID | DOTOP | FUNCCALL
DOTOP: ID . ID . ID . ... . ID
FUNCCALL: ID ( EXPR , ... )
